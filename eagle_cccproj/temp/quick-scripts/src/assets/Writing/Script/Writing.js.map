{"version":3,"sources":["assets/Writing/Script/Writing.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import WritingChar from './WritingChar';\nimport WritingDot from './WritingDot';\nimport Practice from './Practice';\n\nconst { ccclass, property } = cc._decorator;\n\nconst DOT_SHOWN_GAP = 0.15;\nconst GUIDE_SHOWN_DURATION = WritingDot.LAST_DOT_SHOWN_DURATION;\n\n// 两点的最小距离，如果小于这个，则不画\nconst DRAW_DOT_DISTANCE_MIN = 30;\n\n// 描红练习状态定义\nconst enum WritingState {\n    /**\n     * 初始状态\n     */\n    Init,\n    /**\n     * 初始显示动画播放中\n     */\n    ShownAnimating,\n    /**\n     * 可拖动\n     */\n    Dragable,\n    /**\n     * 拖动完成动画播放中\n     */\n    DragCompleteAnimating,\n    /**\n     * 可绘制\n     */\n    Paintable,\n    /**\n     * 绘制完成动画播放中\n     */\n    PaintCompleteAnimating,\n    /**\n     * 已完成\n     */\n    Finished,\n}\n\n/**\n * 描红练习\n */\n@ccclass\nexport default class Writing extends Practice {\n    @property(cc.Node)\n    rocket: cc.Node = null;\n\n    @property(cc.Node)\n    pen: cc.Node = null;\n\n    @property(cc.Node)\n    charContainer: cc.Node = null;\n\n    @property({ tooltip: '字母果冻效果音效', type: cc.AudioClip })\n    jellyAudio: cc.AudioClip = null;\n\n    @property({ tooltip: '黄色点出现音效', type: cc.AudioClip })\n    mainDotShown: cc.AudioClip = null;\n\n    @property({ tooltip: '黄色点擦除音效', type: cc.AudioClip })\n    mainDotErased: cc.AudioClip = null;\n\n    @property({ tooltip: '彩色星星出现音效', type: cc.AudioClip })\n    starFinishedShown: cc.AudioClip = null;\n\n    @property({ tooltip: '白色星星出现音效', type: cc.AudioClip })\n    rightStarShown: cc.AudioClip = null;\n\n    drawPanel: cc.Graphics = null;\n\n    private state: WritingState = WritingState.Init;\n\n    private char: WritingChar = null;\n    private currentLine = -1;\n    private nextDot = -1;\n\n    private text: string = null;\n    // 对应的音频\n    private spelling: cc.AudioClip = null;\n\n    onLoad() {\n        this.init(\"\", \"\", \"a\")\n    }\n\n    public init(courseId: string, practiceId: string, practiceData: string): Promise<void> {\n        // 数据就是预制体的名称（字符）\n        this.text = practiceData;\n\n        return new Promise((resolve, reject) => {\n            cc.loader.loadRes(`Writing/${practiceData}`, cc.Prefab, (error: Error, res: cc.Prefab) => {\n                if (error) {\n                    console.error('描红练习加载失败', practiceData, error);\n                    reject(error);\n                    return;\n                }\n                if (!this.isValid) {\n                    cc.loader.release(res);\n                    reject();\n                    return;\n                }\n\n                const charNode = cc.instantiate(res);\n                charNode.parent = this.charContainer;\n                this.char = charNode.getComponent(WritingChar);\n                // 提前初始化节点并设置音效\n                this.char.getLines().forEach((line) => {\n                    line.forEach((dot) => {\n                        dot.setAudios(\n                            this.mainDotShown,\n                            this.mainDotErased,\n                            this.starFinishedShown,\n                            this.rightStarShown\n                        );\n                    });\n                });\n                // 初始化画板\n                this.drawPanel = this.char.drawPanel;\n            });\n        });\n    }\n\n    private isFirstLineGuided = false;\n\n    public onShow() {\n        // 在首次显示时启动动画\n        if (!this.isFirstLineGuided) {\n            this.isFirstLineGuided = true;\n            // 播完音频再播动画\n            this.playCharAudio().then(() => {\n                if (this.state === WritingState.Init) {\n                    this.state = WritingState.ShownAnimating;\n                    this.playCharAnimation().then(() => {\n                        if (this.state === WritingState.ShownAnimating) {\n                            this.state = WritingState.Dragable;\n                            this.animNextLine();\n                        } else {\n                            console.error('显示动画完成时状态不是初始动画播放中状态', this.state);\n                        }\n                    });\n                } else {\n                    console.error('初始引导时状态不是初始状态', this.state);\n                }\n            });\n        }\n    }\n\n    /**\n     * 播放字母音频\n     */\n    private playCharAudio() {\n        return new Promise((resolve) => {\n            if (this.spelling) {\n                cc.audioEngine.setFinishCallback(cc.audioEngine.play(this.spelling, false, 1), resolve);\n            } else {\n                console.error('缺少音频资源', this.text);\n                resolve();\n            }\n        });\n    }\n\n    /**\n     * 播放字母动画\n     */\n    private playCharAnimation() {\n        return new Promise((resolve) => {\n            const upDur = 0.2,\n                downDur = 0.15,\n                flatDur = 0.15,\n                elasticDur = 0.2;\n            const originY = this.char.node.y;\n            const scaleX = [0.8, 1, 1.2, 0.9, 1.1, 1];\n            const scaleY = [1.2, 1, 0.8, 1.1, 0.9, 1];\n            //果冻效果\n            this.char.node.runAction(\n                cc.sequence(\n                    cc.delayTime(0.3),\n                    cc.callFunc(() => {\n                        //播放果冻音效\n                        cc.audioEngine.play(this.jellyAudio, false, 1);\n                    }),\n                    cc.spawn(\n                        // 变瘦向上飞，然后掉下来变扁，再弹一下恢复\n                        cc.sequence(\n                            cc.moveTo(upDur, 0, originY + 100),\n                            cc.moveTo(downDur, 0, originY)\n                            // cc.delayTime(flatDur),\n                            // cc.moveTo(elasticDur, 0, originY + 50),\n                            // cc.moveTo(elasticDur, 0, originY)\n                        ),\n                        cc.sequence(\n                            cc.scaleTo(upDur, scaleX[0], scaleY[0]),\n                            cc.scaleTo(downDur, scaleX[1], scaleY[1]),\n                            cc.scaleTo(flatDur, scaleX[2], scaleY[2]),\n                            cc.scaleTo(elasticDur, scaleX[3], scaleY[3]),\n                            cc.scaleTo(elasticDur, scaleX[4], scaleY[4]),\n                            cc.scaleTo(elasticDur, scaleX[5], scaleY[5])\n                        ),\n                        cc.sequence(\n                            cc.delayTime(upDur + downDur + flatDur + elasticDur * 3 + 0.5), // 多等0.5秒再到下一步\n                            cc.callFunc(resolve)\n                        )\n                    )\n                )\n            );\n        });\n    }\n\n    /**\n     * 引导下一笔，动画显示各点，并将火箭或画笔移到第一个点上\n     */\n    private animNextLine() {\n        const lines = this.char.getLines();\n        const nextLine = this.currentLine + 1;\n        if (nextLine >= 0 && nextLine < lines.length) {\n            this.currentLine = nextLine;\n            this.nextDot = 0;\n            // 仅对引导节点做动画\n            const line = lines[nextLine];\n\n            line.forEach((dot, index) => {\n                this.scheduleOnce(() => {\n                    dot.showGuide();\n                    if (index === line.length - 1) {\n                        // 火箭或笔和最后一个点同步出来\n                        const guideNode = this.state === WritingState.Dragable ? this.rocket : this.pen;\n\n                        if (line.length > 1) {\n                            guideNode.scale = 0;\n                            // 计算前两个引导点的方向\n                            const firstNode = line[0].node;\n                            const firstNodePosition = firstNode.getPosition();\n                            const dir0To1 = cc.v2(line[1].node.getPosition().sub(firstNodePosition));\n\n                            if (this.state === WritingState.Dragable) {\n                                // 沿着前两个节点的反向移动半个火箭的距离\n                                guideNode.setPosition(guideNode.parent\n                                    .convertToNodeSpaceAR(firstNode.parent.convertToWorldSpaceAR(firstNodePosition))\n                                    .sub(dir0To1.mul(guideNode.height / 2 / dir0To1.mag())));\n                                // 火箭的角度是要变的\n                                guideNode.angle = -this.vectorsToDegress(dir0To1);\n                            } else {\n                                guideNode.setPosition(guideNode.parent\n                                    .convertToNodeSpaceAR(firstNode.parent.convertToWorldSpaceAR(firstNodePosition))\n                                    .sub(dir0To1.mul(10 / dir0To1.mag())));\n                            }\n                            guideNode.opacity = 255;\n                            guideNode.active = true;\n                            guideNode.runAction(\n                                cc.sequence(\n                                    cc.scaleTo(GUIDE_SHOWN_DURATION, 1, 1).easing(cc.easeBackOut()),\n                                    cc.callFunc(() => {\n                                        // 引导节点（火箭/笔）显示出来后，再设置触摸回调\n                                        if (this.state === WritingState.Dragable) {\n                                            this.switchRocketListener(true);\n                                        } else if (this.state === WritingState.Paintable) {\n                                            this.switchPenListener(true);\n                                            this.char.showDrawPanel();\n                                        } else {\n                                            console.error('引导节点动画显示完毕时不是可操作状态', this.state);\n                                        }\n                                    })\n                                )\n                            );\n                        } else {\n                            // 如果只有一个点，隐藏引导工具图片，星星闪烁\n                            // 直接移到引导点上\n                            guideNode.position = guideNode.parent.convertToNodeSpaceAR(\n                                dot.node.parent.convertToWorldSpaceAR(dot.node.position)\n                            );\n                            if (this.state === WritingState.Dragable) {\n                                // 火箭的话，一个点的不显示\n                                guideNode.opacity = 0;\n                            }\n                            guideNode.active = true;\n                            this.scheduleOnce(() => {\n                                if (this.state === WritingState.Dragable || this.state === WritingState.Paintable) {\n                                    // 隐藏引导节点图片后，再设置触摸回调\n                                    if (this.state === WritingState.Dragable) {\n                                        this.switchRocketListener(true);\n                                    } else {\n                                        this.switchPenListener(true);\n                                        this.char.showDrawPanel();\n                                    }\n\n                                    // 星星节点缩放\n                                    const duration = 1,\n                                        gap = 0.3;\n                                    dot.node.runAction(\n                                        cc.repeatForever(\n                                            cc.sequence(\n                                                cc.scaleTo(duration / 2, 1.1),\n                                                cc.scaleTo(duration / 2, 1),\n                                                cc.delayTime(gap)\n                                            )\n                                        )\n                                    );\n                                } else {\n                                    console.error('引导节点动画显示完毕时不是可操作状态', this.state);\n                                }\n                            }, 1);\n                        }\n                    }\n                }, DOT_SHOWN_GAP * index);\n            });\n        } else {\n            console.error('当前已经是最后一条线了，没有下一条做动画');\n        }\n    }\n\n    /**\n     * 向量转角度值\n     * @param dirVec 待计算向量\n     */\n    private vectorsToDegress(dirVec: cc.Vec2) {\n        const comVec = cc.v2(0, 1); // 水平向右的对比向量\n        const radian = dirVec.signAngle(comVec); // 求方向向量与对比向量间的弧度\n        const degree = cc.misc.radiansToDegrees(radian); // 将弧度转换为角度\n        return degree;\n    }\n\n    /**\n     * 切换火箭拖拽支持状态\n     */\n    private switchRocketListener(enabled: boolean) {\n        if (enabled) {\n            this.rocket.on(cc.Node.EventType.TOUCH_START, this.onRocketTouchStart, this);\n            this.rocket.on(cc.Node.EventType.TOUCH_MOVE, this.onRocketTouchMove, this);\n            this.rocket.on(cc.Node.EventType.TOUCH_CANCEL, this.onRocketTouchEndOrCancel, this);\n            this.rocket.on(cc.Node.EventType.TOUCH_END, this.onRocketTouchEndOrCancel, this);\n        } else {\n            this.rocket.off(cc.Node.EventType.TOUCH_START, this.onRocketTouchStart, this);\n            this.rocket.off(cc.Node.EventType.TOUCH_MOVE, this.onRocketTouchMove, this);\n            this.rocket.off(cc.Node.EventType.TOUCH_CANCEL, this.onRocketTouchEndOrCancel, this);\n            this.rocket.off(cc.Node.EventType.TOUCH_END, this.onRocketTouchEndOrCancel, this);\n        }\n    }\n\n    // 最后一次有效拖动触发位置\n    private lastDragAvailablePosition: cc.Vec2 = null;\n\n    private onRocketTouchStart(event: cc.Event.EventTouch) {\n        // 记录一开始拖拽的坐标，后面手的移动，都和前一次的有效位置比较，沿着轨迹方向的才允许动\n        this.lastDragAvailablePosition = event.getLocation();\n\n        const line = this.char.getLines()[this.currentLine];\n        if (line && this.nextDot < line.length) {\n            if (line.length > 1) {\n                // 启动移动动画\n                this.rocket.getComponent(cc.Animation).play('rocket_moving');\n            } else {\n                // 只有一个点，点上了就激活\n                const next = line[this.nextDot];\n                // 取消缩放引导\n                next.node.stopAllActions();\n                next.turnOn();\n                this.nextDot++;\n            }\n        }\n    }\n\n    /**\n     * 火箭拖拽，只有移动方向是朝着下一个点的，才动。如果碰到下一个点，点亮。\n     * @param event\n     */\n    private onRocketTouchMove(event: cc.Event.EventTouch) {\n        if (this.state !== WritingState.Dragable) {\n            console.error('火箭拖拽中状态不对', this.state);\n            return;\n        }\n\n        // 计算当前移动距离在当前点与下一个点之间的投影，作为新的点\n        const line = this.char.getLines()[this.currentLine];\n        if (line && this.nextDot < line.length) {\n            // 距离上一次有效点的偏移量\n            const newLocation = event.getLocation();\n            const delta = newLocation.sub(this.lastDragAvailablePosition);\n\n            if (delta.magSqr() === 0) {\n                // 位置没变，无需计算\n                return;\n            }\n\n            const node = this.rocket;\n            const next = line[this.nextDot];\n\n            // 当前火箭位置与下一个点的向量\n            const dirToNext = cc.v2(\n                next.node.parent\n                    .convertToWorldSpaceAR(next.node.position)\n                    .sub(node.parent.convertToWorldSpaceAR(node.position))\n            );\n\n            // 如果夹角在正负90度范围内，说明新的方向一致，可以移动\n            const radian = dirToNext.signAngle(delta);\n            if (radian > -Math.PI / 2 && radian < Math.PI / 2) {\n                // 按投影方向移动指定距离\n                const projection = delta.project(dirToNext);\n\n                let newPos = node.getPosition().add(projection);\n                if (projection.magSqr() >= dirToNext.magSqr()) {\n                    // 防止超出下一个点\n                    newPos = node.parent.convertToNodeSpaceAR(\n                        next.node.parent.convertToWorldSpaceAR(next.node.getPosition())\n                    );\n\n                    // 已经到了下一个点，激活\n                    next.turnOn();\n                    this.nextDot++;\n                } else {\n                    // 针对绑定在下一个点的未点亮的星星或小点，若已经过，则点亮之\n                    next.getRelativeDots()\n                        .filter((dot) => !dot.isTriggered())\n                        .forEach((dot) => {\n                            // 新位置指向星星或小点的向量\n                            const dirToDot = cc.v2(\n                                dot.node.parent\n                                    .convertToWorldSpaceAR(dot.node.getPosition())\n                                    .sub(node.parent.convertToWorldSpaceAR(newPos))\n                            );\n\n                            let turnOn = false;\n                            if (dirToDot.magSqr() === 0) {\n                                // 就在星星或小点上面，点亮\n                                turnOn = true;\n                            } else {\n                                // 看新位置与下一个点及星星或小点的两个向量夹角，若是直角或钝角，说明已经经过了，可以点亮\n                                // 因为火箭是沿着两个引导点之间的线段移动的，可以直接用之前位置与下一个点的向量代替最新点与下一个点的向量来计算夹角\n                                const radianOfDotAndNext = dirToNext.signAngle(dirToDot);\n                                turnOn = radianOfDotAndNext <= -Math.PI / 2 || radianOfDotAndNext >= Math.PI / 2;\n                            }\n\n                            if (turnOn) {\n                                dot.turnOn();\n                            }\n                        });\n                }\n                node.x = newPos.x;\n                node.y = newPos.y;\n\n                // 火箭的角度由前一个点指向当前目标点\n                node.angle = -this.vectorsToDegress(dirToNext);\n\n                // 更新拖拽位置\n                this.lastDragAvailablePosition = newLocation;\n            } else {\n                console.debug('反向不变化', radian, dirToNext.magSqr());\n            }\n        } else {\n            console.warn('当前笔画已经拖完了');\n        }\n    }\n\n    /**\n     * 火箭拖拽完毕，如果最后一点已经触发，转下一条线\n     */\n    private onRocketTouchEndOrCancel() {\n        if (this.state !== WritingState.Dragable) {\n            console.error('火箭拖拽完毕状态不对', this.state);\n            return;\n        }\n\n        // 切换到空闲状态动画\n        this.rocket.getComponent(cc.Animation).play('rocket_idel');\n\n        const lines = this.char.getLines();\n        if (this.nextDot === lines[this.currentLine].length) {\n            // 抬手时当前笔画的最后一笔已激活，触发下一笔动画\n            this.switchRocketListener(false);\n            this.rocket.active = false;\n            if (this.currentLine < lines.length - 1) {\n                // 还没到最后一条线\n                this.animNextLine();\n            } else {\n                this.state = WritingState.DragCompleteAnimating;\n                this.playCharAnimation()\n                    // 播完动画后播下音频\n                    .then(this.playCharAudio.bind(this))\n                    .then(() => {\n                        if (this.state === WritingState.DragCompleteAnimating) {\n                            // 重置所有点\n                            this.char.reset();\n                            this.currentLine = -1;\n                            this.nextDot = -1;\n                            // 引导画线\n                            this.state = WritingState.Paintable;\n                            this.animNextLine();\n                        } else {\n                            console.error('拖拽动画显示完毕时状态不对', this.state);\n                        }\n                    });\n            }\n        }\n    }\n\n    /**\n     * 切换画笔拖拽支持状态\n     */\n    private switchPenListener(enabled: boolean) {\n        if (enabled) {\n            this.pen.on(cc.Node.EventType.TOUCH_START, this.onPenTouchStart, this);\n            this.pen.on(cc.Node.EventType.TOUCH_MOVE, this.onPenTouchMove, this);\n            this.pen.on(cc.Node.EventType.TOUCH_CANCEL, this.onPenTouchEndOrCancel, this);\n            this.pen.on(cc.Node.EventType.TOUCH_END, this.onPenTouchEndOrCancel, this);\n        } else {\n            this.pen.off(cc.Node.EventType.TOUCH_START, this.onPenTouchStart, this);\n            this.pen.off(cc.Node.EventType.TOUCH_MOVE, this.onPenTouchMove, this);\n            this.pen.off(cc.Node.EventType.TOUCH_CANCEL, this.onPenTouchEndOrCancel, this);\n            this.pen.off(cc.Node.EventType.TOUCH_END, this.onPenTouchEndOrCancel, this);\n        }\n    }\n\n    private drawPath: cc.Vec2[][] = [];\n    private isDrawingReset = false;\n\n    private onPenTouchStart() {\n        // 新的按下时，重置标记\n        this.isDrawingReset = false;\n\n        if (!Array.isArray(this.drawPath[this.currentLine])) {\n            // 起始点是画笔所在\n            // TODO 非2.1.2版本，要切换到节点坐标系，2.1.2有bug\n            // https://forum.cocos.com/t/cocos-creator-2-1-2-graphics/80904/8\n            this.drawPath[this.currentLine] = [\n                // 将画笔所在点作为第一个触摸点\n                // this.char.drawPanel.node.convertToNodeSpaceAR(this.pen.parent.convertToWorldSpaceAR(this.pen.position)),\n                this.pen.parent.convertToWorldSpaceAR(this.pen.getPosition()),\n            ];\n        }\n\n        const line = this.char.getLines()[this.currentLine];\n        if (line && line.length === 1 && this.nextDot < line.length) {\n            // 取消缩放动效\n            line[0].node.stopAllActions();\n            // 只有一个点，点上了就激活\n            this.onPenTouchMove({ getDelta: () => cc.v2(1, 1) });\n        }\n    }\n\n    private onPenTouchMove(event: { getDelta: () => cc.Vec2 }) {\n        if (this.state !== WritingState.Paintable) {\n            console.error('画笔绘制中状态不对', this.state);\n            return;\n        }\n\n        if (this.isDrawingReset) {\n            // 已重置，不处理\n            return;\n        }\n\n        if (event.getDelta().magSqr() === 0) {\n            // 位置没变化，不画\n            return;\n        }\n\n        const lines = this.char.getLines();\n        const line = lines[this.currentLine];\n        if (line && this.nextDot < line.length) {\n            const next = line[this.nextDot];\n            // TODO 非2.1.2版本，要切换到世界坐标系，2.1.2有bug\n            // const nextPosD = this.drawPanel.node.convertToNodeSpaceAR(next.node.parent.convertToWorldSpaceAR(next.node.position));\n            const nextPosW = next.node.parent.convertToWorldSpaceAR(next.node.getPosition());\n            // 计算新点的位置\n            const linePath = this.drawPath[this.currentLine];\n            const delta = event.getDelta();\n\n            // 转换成投影路线上的点\n            const prevPosD = linePath[linePath.length - 1];\n            const dirToNext = cc.v2(nextPosW.sub(prevPosD));\n            const dirToNextLength = dirToNext.mag();\n\n            let projectionLength = 0;\n            let projection: cc.Vec2;\n            if (dirToNextLength != 0) {\n                projection = delta.project(dirToNext);\n                projectionLength = projection.mag();\n                if (projectionLength === 0) {\n                    // 在投影方向上没有移动，不处理\n                    return;\n                }\n            } else {\n                // 对于一个点的情况，由于起始点就在下一个点上，dirToNextLength为0\n                projection = cc.v2(0, 0);\n            }\n\n            let newPosD = prevPosD.add(projection);\n            const distanceToNext = nextPosW.sub(newPosD).mag();\n            const radian = dirToNextLength != 0 ? dirToNext.signAngle(projection) : 0;\n            if (radian > -Math.PI / 2 && radian < Math.PI / 2) {\n                // 方向相同\n                if (dirToNextLength <= projectionLength) {\n                    // 超出了，切下一个点\n                    newPosD = nextPosW;\n                    this.nextDot++;\n\n                    // 防止一笔画太远，之前没被擦掉\n                    if (!next.isTriggered()) {\n                        next.erase();\n                    }\n                } else if (!next.isTriggered() && distanceToNext < this.drawPanel.lineWidth / 2) {\n                    // 画到了，提前擦除，并防止重复擦\n                    next.erase();\n                }\n            } else {\n                // 方向相反，看下距离有没有超过前后两个点距离（如果一个点还没激活，就看有没有超过画笔起始点和第一个点的距离）\n                // const distanceOfPrevAndNext =\n                //     this.nextDot > 0\n                //         ? next.node.position.sub(line[this.nextDot - 1].node.position).mag()\n                //         : 0;\n                //         // : linePath[0].sub(newPosD).mag();\n                // if (distanceToNext > distanceOfPrevAndNext + this.drawPanel.lineWidth / 2) {\n                //     console.warn(\n                //         '超过了，重置当前线段',\n                //         `距离下一个 ${distanceToNext}`,\n                //         `上一个点是 ${this.nextDot > 0 ? '实际点' : '初始点'}`,\n                //         distanceOfPrevAndNext\n                //     );\n                //     this.isDrawingReset = true;\n                //     this.switchPenListener(false);\n                //     this.pen.active = false;\n                //     this.nextDot = -1;\n                //     this.currentLine -= 1;\n                //     this.drawPath.pop();\n                //     this.draw(this.drawPath);\n                //     this.animNextLine();\n\n                //     return;\n                // }\n\n                //反向，改为直接返回\n                return;\n            }\n\n            // 根据当前偏移，在graphic上对应位置画，并移动画笔\n            this.drawPath[this.currentLine].push(newPosD);\n            this.draw(this.drawPath);\n            // TODO 非2.1.2版本，要切换到世界坐标系，2.1.2有bug\n            // const penPos = this.pen.parent.convertToNodeSpaceAR(this.drawPanel.node.convertToWorldSpaceAR(newPosD));\n            const penPos = this.pen.parent.convertToNodeSpaceAR(newPosD);\n            this.pen.x = penPos.x;\n            this.pen.y = penPos.y;\n\n            // 如果激活了最后一个点，要转下一笔了\n            if (this.nextDot === lines[this.currentLine].length) {\n                // 先设置重置标记，不处理后续的事件\n                this.turnToNextDraw(lines);\n            }\n        } else {\n            console.warn('当前笔画已经都画到了');\n        }\n    }\n\n    /**\n     * 转向下一笔的绘制或直接完成\n     * @param lines 所有笔画\n     */\n    private turnToNextDraw(lines: WritingDot[][]) {\n        this.isDrawingReset = true;\n\n        this.switchPenListener(false);\n        this.pen.active = false;\n        if (this.currentLine < lines.length - 1) {\n            // 还没到最后一条线，动画引导\n            this.animNextLine();\n        } else {\n            this.framework && this.framework.lockSwitch();\n            this.state = WritingState.PaintCompleteAnimating;\n\n            // 填充画布\n            this.char\n                .fill()\n                .then(this.playCharAnimation.bind(this))\n                // 动画完播下音频再通关\n                .then(this.playCharAudio.bind(this))\n                .then(() => {\n                    if (this.state === WritingState.PaintCompleteAnimating) {\n                        this.state = WritingState.Finished;\n                        console.debug('描红完成');\n\n                        if (this.framework) {\n                            this.framework.onStarGot(3);\n                            this.framework.onPracticeFinished();\n                        }\n                    } else {\n                        console.error('绘制动画显示完毕时状态不对', this.state);\n                    }\n                });\n        }\n    }\n\n    private onPenTouchEndOrCancel() {\n        if (this.state !== WritingState.Paintable) {\n            console.error('画笔绘制完毕状态不对', this.state);\n            return;\n        }\n\n        if (this.isDrawingReset) {\n            // 已重置，不处理\n            return;\n        }\n\n        const lines = this.char.getLines();\n        const line = lines[this.currentLine];\n        if (line && this.nextDot < line.length && this.nextDot === lines[this.currentLine].length - 1) {\n            const next = line[this.nextDot];\n            if (next.isTriggered()) {\n                // 抬笔时，最后一个点已擦除了，只是没画到，自动切\n                this.nextDot++;\n                this.turnToNextDraw(lines);\n            }\n        }\n    }\n\n    /**\n     * 绘制路径，每次都是清除画布后重新绘制完整路径，这样stroke几次，drawcall才会增加多少\n     * @param path\n     */\n    private draw(path: cc.Vec2[][]) {\n        this.drawPanel.clear();\n        path.forEach((line) => {\n            if (line.length === 2 && line[0].equals(line[1])) {\n                this.drawPanel.arc(line[0].x, line[0].y, 10, 0, 360);\n            } else {\n                let prevValidDot: cc.Vec2 = null;\n                line.forEach((dot, index) => {\n                    if (index === 0) {\n                        this.drawPanel.moveTo(dot.x, dot.y);\n                    } else {\n                        if (index < line.length - 1) {\n                            // 过滤距离太近的若干个点\n                            if (dot.sub(prevValidDot).mag() < DRAW_DOT_DISTANCE_MIN) {\n                                // console.debug('skip', dot.x, dot.y);\n                                return;\n                            }\n                        }\n                        this.drawPanel.lineTo(dot.x, dot.y);\n                    }\n                    prevValidDot = dot;\n                });\n            }\n            this.drawPanel.stroke();\n        });\n    }\n}\n"]}