{"version":3,"sources":["assets/Framwork/NativeBridge/CallNative.ts"],"names":[],"mappings":";;;;;;;AACA;IAWI;QACI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE;YACzB,OAAO,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAA;SACnD;IACL,CAAC;IAVD,sBAAkB,sBAAQ;aAA1B;YACI,IAAI,CAAC,IAAI,CAAC,SAAS;gBACf,IAAI,CAAC,SAAS,GAAG,IAAI,UAAU,EAAE,CAAA;YACrC,OAAO,IAAI,CAAC,SAAS,CAAA;QACzB,CAAC;;;OAAA;IAQM,iCAAY,GAAnB,UAAoB,OAAe;QAC/B,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IAC1F,CAAC;IAEM,kCAAa,GAApB;QACI,IAAI,OAAO,GAAG,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;QAC5F,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,OAAO,CAAC,CAAA;QACzD,OAAO,OAAO,IAAI,CAAC,CAAA;IACvB,CAAC;IAGM,6BAAQ,GAAf;IAEA,CAAC;IAEM,gCAAW,GAAlB;QACI,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAClG,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,GAAG,CAAC,CAAC;QAE7D,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,uBAAuB,EAAE,cAAc,EAAE,uBAAuB,EAAE,sBAAsB,CAAC,CAAC;QAE1H,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,gCAAgC,EAAE,gBAAgB,EAAE,sBAAsB,CAAC,CAAC;QACtH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,GAAG,EAAE;YACL,IAAI;gBACA,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC3B,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,EAAE;oBACzB,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;iBAClC;qBAAM;oBACH,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;iBAClC;aACJ;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACxB;SACJ;IACL,CAAC;IAED;;;;;OAKG;IACI,mCAAc,GAArB,UAAsB,SAAS,EAAE,MAAM,EAAE,MAAM;QAC3C,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;YACnD,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;YACnD,OAAM;SACT;QAED,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAM,EAAE,EAAE,CAAC,CAAA;IAC1D,CAAC;IAjEa,oBAAS,GAAG,OAAO,CAAA;IAElB,oBAAS,GAAe,IAAI,CAAC;IAgEhD,iBAAC;CApED,AAoEC,IAAA;AApEY,gCAAU","file":"","sourceRoot":"/","sourcesContent":["\nexport class CallNative {\n\n    public static OpenScene = \"Main2\"\n\n    private static _instance: CallNative = null;\n    public static get instance(): CallNative {\n        if (!this._instance)\n            this._instance = new CallNative()\n        return this._instance\n    }\n\n    constructor() {\n        if (!jsb || !jsb.reflection) {\n            console.error(\"jsb or reflection is undefined!\")\n        }\n    }\n\n    public callBackHome(sceneId: number) {\n        jsb.reflection.callStaticMethod(\"com/eagle/video/Hello\", \"gameBack\", \"(I)V\", sceneId);\n    }\n\n    public callSceneData() {\n        let sceneId = jsb.reflection.callStaticMethod(\"com/eagle/video/Hello\", \"sceneData\", \"(V)I\");\n        console.log(\"[callSceneData] return sceneId = \", sceneId)\n        return sceneId || 1\n    }\n\n\n    public callVoid() {\n        \n    }\n\n    public helloNative() {\n        let ret = jsb.reflection.callStaticMethod(\"com/eagle/video/Hello\", \"helloNativeI\", \"(II)I\", 1, 1);\n        console.log(\"called helloNativeI and ret from native \", ret);\n\n        jsb.reflection.callStaticMethod(\"com/eagle/video/Hello\", \"helloNativeS\", \"(Ljava/lang/String;)V\", \"hello native, i'm js\");\n\n        let res = jsb.reflection.callStaticMethod(\"com/eagle/video/DataReflection\", \"getPackageData\", \"()Ljava/lang/String;\");\n        console.log(res);\n        if (res) {\n            try {\n                let json = JSON.parse(res);\n                if (json.launchSceneID == 1) {\n                    cc.director.loadScene(\"Main1\");\n                } else {\n                    cc.director.loadScene(\"Main2\");\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    }\n\n    /**\n     * 调用原生静态方法\n     * @param className \n     * @param method \n     * @param params @Array<any>\n     */\n    public callStaticFunc(className, method, params) {\n        if (!className || !method || !params || params.length) {\n            console.error(\"callStaticFunc params is defenced!\")\n            return\n        }\n\n        jsb.reflection.callStaticMethod(className, method, \"\")\n    }\n}"]}